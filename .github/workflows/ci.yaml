name: ci
on:
  push:
    branches:
      - master
  pull_request:

jobs:
#  rustfmt:
#    runs-on: ubuntu-latest
#    name: cargo fmt
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: install stable toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          profile: minimal
#          components: rustfmt
#          override: true
#
#      - name: install rustfmt
#        run: rustup component add rustfmt
#
#      - name: cargo fmt
#        uses: actions-rs/cargo@v1
#        with:
#          command: fmt
#          args: --all -- --check

  test-stable:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    name: cargo clippy+test
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: cargo test (anyhow feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features=anyhow

  test-nightly:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    name: cargo clippy+test nightly
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          profile: minimal
          override: true

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: cargo test (anyhow feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features=anyhow

#  check-docs:
#    name: Docs
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [macOS-latest, windows-2019, ubuntu-latest]
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: install nightly toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#          profile: minimal
#          override: true
#
#      - name: check docs
#        uses: actions-rs/cargo@v1
#        with:
#          command: doc
#          args: --document-private-items
